version: 2.1

orbs:
  helm: circleci/helm@0.2.3
  aws-cli: circleci/aws-cli@0.1.16
  aws-eks: circleci/aws-eks@0.2.1
  slack: circleci/slack@3.4.0
  jq: circleci/jq@1.9.0

jobs:
  build-image:
    docker:
      - image: circleci/php:7.1.32-fpm-node
    working_directory: ~/jobHunter
    executor: aws-cli/default
    environment:
      - DOCKER_REPO: mouwang
      - DOCKER_IMAGE: jobhunter-nginx-php
      - APP_KEY: BNx7BhfE6D3QCntRKJWLsAOEGmOEdaWn
      - CLOUDSEARCH_DOMAIN: https://doc-job-hunter-fhccdpwhbxzcjpv7njooweyjtq.us-west-2.cloudsearch.amazonaws.com
      - AWS_REGION: us-west-2
      - TEST_CODENAME: Dexter008
    steps:
      - checkout
#      - aws-cli/setup
#      - jq/install
      - setup_remote_docker
#      - run:
#          name: check AWS Cli env
#          command: aws --version
      - add_ssh_keys:
          fingerprints:
            - "8d:29:e0:9e:a2:27:75:cc:bd:11:28:2d:5b:37:c7:6b" # mouCodes2020
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # NodeJS - Node Modules
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run: npm install

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Show Current Location
          command: pwd

      - run:
          name: Install phpUnit 7.5 phar
          command: |
            wget https://phar.phpunit.de/phpunit-7.5.phar
            chmod +x phpunit-7.5.phar
            mv phpunit-7.5.phar phpunit

#      - run:
#          name: Run Unit Test
#          command: |
#            ./vendor/bin/phpunit --exclude-group ignore --testdox

  ## Docker Related
      - run:
          name: Docker Hub Login
          command: echo "${DOCKER_PASS}" | docker login --username ${DOCKER_USER} --password-stdin

      - run:
          name: Check Docker Version
          command: docker -v

      - run:
          name: Create folder for DockerImage
          command: mkdir /tmp/build

      - run:
          name: Copy Dockerfile settings
          command: |
            cp .circleci/Dockerfile /tmp/build

      - run:
          name: Copying files to build folder
          command: cp -r ./* /tmp/build

      - run:
          name: Modify Folder Right
          command: chmod 777 -R /tmp/build/storage

      - slack/notify:
          channel: 'jobhunter-ci'
          title: "[jobHunter] ImageBuilding"
          message: "${DOCKER_REPO}/${DOCKER_IMAGE}: 0.1.${CIRCLE_BUILD_NUM}"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

      - run:
          name: Move to Build Folder && Build
          command: |
            cd /tmp/build &&
            docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE}:0.1.${CIRCLE_BUILD_NUM} .

      - run:
          name: Push to Docker Hub
          command: docker push ${DOCKER_REPO}/${DOCKER_IMAGE}:0.1.${CIRCLE_BUILD_NUM}

  helm-deploy:
    executor: aws-eks/python
    environment:
      - DOCKER_REPO: mouwang
      - DOCKER_IMAGE: jobhunter-nginx-php
      - CLUSTER_NAME: mouworks-cluster
    parameters:
      cluster-name:
        description: ClusterName
        type: string
      app-version:
        description: AppVersion for image
        type: string
    working_directory: ~/jobHunter
    steps:
      - checkout
      - helm/install-helm-client:
          version: v3.0.0
      - run:
          name: helm repo
          command: helm repo add stable https://kubernetes-charts.storage.googleapis.com/
      - aws-cli/setup
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - run:
          name: Where Am I ?
          command: pwd
      - run:
          name: list files
          command: ls
      - run:
          name: check Pipeline Value
          command: echo ${CIRCLE_WORKFLOW_ID}
      - run:
          name: check Circle SHA
          command: echo ${CIRCLE_SHA}
      - run:
          name: check Image build Num
          command: echo ${CIRCLE_PREVIOUS_BUILD_NUM}

      ## AWS Eks update
      - run:
          name: Update AppVersion in Chart.yaml
          command: |
            echo 'appVersion: 1.0.'${CIRCLE_PREVIOUS_BUILD_NUM} >> helmChart/Chart.yaml
      - run:
          name: Inject Env (secret) for HelmSecrets
          command: |
            EnvString="APP_KEY=${APP_KEY}\nAPP_DEBUG=TRUE\nAWS_ACCESS_KEY=${AWS_ACCESS_KEY}\nAWS_ACCESS_SECRET=${AWS_ACCESS_SECRET}\nAWS_REGION=${AWS_REGION}\nTEST_CODENAME=${TEST_CODENAME}\nAWS_CLOUDSEARCH_ENDPOINT=${CLOUDSEARCH_DOMAIN}\nBUILD_NUM=${CIRCLE_BUILD_NUM}"
            echo -e "${EnvString}"

      - helm/upgrade-helm-chart:
          release-name: jobHunter
          chart: "./helmChart"
          version: 1.0.42
      - slack/status:
          channel: 'jobhunter-ci'
          failure_message: "CI build Fail! , Check CircleCI"
          fail_only: true
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK
      - slack/notify:
          channel: 'jobhunter-ci'
          title: "DeployCompleted! https://jobhuntr.work"
          message: "${DOCKER_REPO}/${DOCKER_IMAGE}: 0.1.${CIRCLE_BUILD_NUM}"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK
workflows:
  version: 2.1
  deployment:
    jobs:
      - build-image:
          filters:
            branches:
              only:
                - master_k8s
      - helm-deploy:
          cluster-name: mouworks-cluster
          app-version: 1.0.${CIRCLE_PREVIOUS_BUILD_NUM}
          requires:
            - build-image
