version: 2.1

orbs:
  slack: circleci/slack@3.4.0
  aws-cli: circleci/aws-cli@0.1.16

jobs:
  build:
    docker:
      - image: circleci/php:7.1.32-fpm-node
    working_directory: ~/jobHunter
    executor: aws-cli/default
    environment:
      - DOCKER_REPO: mouwang
      - DOCKER_IMAGE: jobhunter-nginx-php
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker
      - run:
          name: check AWS Cli env
          command: aws --version
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # NodeJS - Node Modules
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run: npm install

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Show Current Location
          command: pwd

      - run:
          name: Install phpUnit 7.5 phar
          command: |
            wget https://phar.phpunit.de/phpunit-7.5.phar
            chmod +x phpunit-7.5.phar
            mv phpunit-7.5.phar phpunit

      - run:
          name: Run Unit Test
          command: |
            ./vendor/bin/phpunit --exclude-group ignore --testdox

  ## Docker Related
      - run:
          name: Docker Hub Login
          command: echo "${DOCKER_PASS}" | docker login --username ${DOCKER_USER} --password-stdin

      - run:
          name: Check Docker Version
          command: docker -v

      - run:
          name: Create folder for DockerImage
          command: mkdir /tmp/build

      - run:
          name: Copy Dockerfile settings
          command: cp .circleci/Dockerfile /tmp/build

      - run:
          name: Create folder for DockerImage
          command: cp -r ./* /tmp/build

      - run:
          name: Move to Build Folder and Build !
          command: |
            cd /tmp/build &&
            docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE}:$CIRCLE_BRANCH .

#      - run:
#          name: Build Docker Image
#          command: docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE}:$CIRCLE_BRANCH .
#      - run:
#          name: Push to Docker Hub
#          command: docker push ${DOCKER_REPO}/${DOCKER_IMAGE}:$CIRCLE_BRANCH

      - slack/status:
          channel: 'jobhunter-ci'
          failure_message: "CI build Fail! , Check CircleCI"
          fail_only: true
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

      - slack/notify:
          channel: 'jobhunter-ci'
          title: "https://jobhunter.manycat.com.tw CI build Finished."
          message: "Deployed by CircleCI"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

workflows:
  version: 2.1
  build_and_auto_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - 001_Refactor_MySQL
